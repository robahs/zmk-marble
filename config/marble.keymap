#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define CMAK   0
#define LWR   1
#define RSE   2
#define LFT 3
#define RGT 4
#define QWERTY 5
#define ADJ   6

#define HPR(key) LS(LC(LA(LGUI)))
#define MEH(key)   LS(LC(LALT))

&sl { release-after-ms = <5000>; };

&lt { flavor = "hold-preferred"; };

&default_kscan {
    debounce-press-ms = <30>;
    debounce-release-ms = <30>;
};

/ {
    behaviors {
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <140>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <100>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 3>;
            then-layer = <6>;
        };
    };

    macros {
        arrow: arrow {
            compatible = "zmk,behavior-macro";
            label = "ARROW";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
        };

        gc: gc {
            compatible = "zmk,behavior-macro";
            label = "GC";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp C &kp O &kp M &kp M &kp I &kp T &kp SPACE &kp MINUS &kp M &kp SPACE &kp DQT &kp DQT &kp LEFT_ARROW>;
        };

        ga: ga {
            compatible = "zmk,behavior-macro";
            label = "GA";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp A &kp D &kp D &kp SPACE &kp MINUS &kp LS(A)>;
        };

        taw: taw {
            compatible = "zmk,behavior-macro";
            label = "TAW";
            #binding-cells = <0>;
            bindings = <&none &kp T &kp A &kp S &kp K &kp SPACE &kp A &kp D &kp D &kp SPACE &kp P &kp R &kp O &kp J &kp COLON &kp W &kp SPACE>;
        };

        tap: tap {
            compatible = "zmk,behavior-macro";
            label = "TAP";
            #binding-cells = <0>;
            bindings = <&none &kp T &kp A &kp S &kp K &kp SPACE &kp A &kp D &kp D &kp SPACE &kp P &kp R &kp O &kp J &kp COLON &kp P>;
        };

        tw: tw {
            compatible = "zmk,behavior-macro";
            label = "TW";
            #binding-cells = <0>;
            bindings = <&none &kp T &kp A &kp S &kp K &kp SPACE &kp P &kp R &kp O &kp J &kp COLON &kp W>;
        };

        tp: tp {
            compatible = "zmk,behavior-macro";
            label = "TP";
            #binding-cells = <0>;
            bindings = <&none &kp T &kp A &kp S &kp K &kp SPACE &kp P &kp R &kp O &kp J &kp COLON &kp P>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        CMAK {
            bindings = <
&kp TAB         &kp Q  &kp W           &kp F            &kp P           &kp B      &kp ESC    &kp RA(Q)  &kp J       &kp L      &kp U      &kp Y      &kp SEMI  &kp BSLH
&kp BACKSPACE   &kp A  &kp R           &kp S            &kp T           &kp G      &kp RA(P)  &kp RA(W)  &kp M       &kp N      &kp E      &kp I      &kp O     &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X           &kp C            &kp D           &kp V                            &kp K       &kp H      &kp COMMA  &kp DOT    &kp FSLH  &kp LGUI
                       &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_SHIFT  &kp SPACE  &kp BSPC   &kp DEL    &kp RETURN  &kp LGUI   &kp COMMA  &kp COMMA
                                                        &kp LCTRL       &kp LALT                         &kp COMMA   &kp COMMA
            >;

            label = "CMAK";
        };
    };
};
