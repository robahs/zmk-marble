#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define CMAK   0
#define LWR   1
#define RSE   2
#define LFT 3
#define RGT 4
#define QWERTY 5
#define ADJ   6

#define HPR(key) LS(LC(LA(LGUI)))
#define MEH(key)   LS(LC(LALT))

&sl { release-after-ms = <5000>; };

&lt { flavor = "hold-preferred"; };

&default_kscan {
    debounce-press-ms = <30>;
    debounce-release-ms = <30>;
};

/ {
    behaviors {
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <140>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <100>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 3>;
            then-layer = <6>;
        };
    };

    macros {
        arrow: arrow {
            compatible = "zmk,behavior-macro";
            label = "ARROW";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
        };

        gc: gc {
            compatible = "zmk,behavior-macro";
            label = "GC";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp C &kp O &kp M &kp M &kp I &kp T &kp SPACE &kp MINUS &kp M &kp SPACE &kp DQT &kp DQT &kp LEFT_ARROW>;
        };

        ga: ga {
            compatible = "zmk,behavior-macro";
            label = "GA";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp A &kp D &kp D &kp SPACE &kp MINUS &kp LS(A)>;
        };

        taw: taw {
            compatible = "zmk,behavior-macro";
            label = "TAW";
            #binding-cells = <0>;
            bindings = <&none &kp T &kp A &kp S &kp K &kp SPACE &kp A &kp D &kp D &kp SPACE &kp P &kp R &kp O &kp J &kp COLON &kp W &kp SPACE>;
        };

        tap: tap {
            compatible = "zmk,behavior-macro";
            label = "TAP";
            #binding-cells = <0>;
            bindings = <&none &kp T &kp A &kp S &kp K &kp SPACE &kp A &kp D &kp D &kp SPACE &kp P &kp R &kp O &kp J &kp COLON &kp P>;
        };

        tw: tw {
            compatible = "zmk,behavior-macro";
            label = "TW";
            #binding-cells = <0>;
            bindings = <&none &kp T &kp A &kp S &kp K &kp SPACE &kp P &kp R &kp O &kp J &kp COLON &kp W>;
        };

        tp: tp {
            compatible = "zmk,behavior-macro";
            label = "TP";
            #binding-cells = <0>;
            bindings = <&none &kp T &kp A &kp S &kp K &kp SPACE &kp P &kp R &kp O &kp J &kp COLON &kp P>;
        };
    };

   / {
    keymap {
        compatible = "zmk,keymap";

        CMAK {
            bindings = <
/* ───── Top row ───── */
&kp TAB &kp Q &kp W &kp F &kp P &kp B &trans                     &kp J &kp L &kp U &kp Y &kp SEMI &kp BSLH
/* ───── Home row ───── */
&kp BSPC &kp A &kp R &kp S &kp T &kp G                           &kp M &kp N &kp E &kp I &kp O &kp SQT
/* ───── Bottom row ───── */
&kp LCTRL &kp Z &kp X &kp C &kp D &kp V                          &kp K &kp H &kp COMMA &kp DOT &kp FSLH &kp LGUI
/* ───── Left thumb cluster ───── */
&lt 2 RA(W)  &gqt LEFT_SHIFT SPACE  &kp BSPC
&lt 4 RA(P)  &kp LEFT_ALT  &kp LEFT_BRACE
/* ───── Right thumb cluster ───── */
&kp DEL  &gqt RIGHT_SHIFT RETURN  &lt 3 RA(Q)
&kp ESC  &kp RIGHT_BRACE  &lt 5 RIGHT_BRACE
            >;
            label = "CMAK";
        };

        QWERTY {
            bindings = <
&trans  &kp Q &kp W &kp E &kp R &kp T  &trans                    &kp Y &kp U &kp I &kp O &kp P &kp BSLH
&trans  &kp A &kp S &kp D &kp F &kp G  &trans                    &kp H &kp J &kp K &kp L &kp SEMI &kp SQT
&trans  &kp Z &kp X &kp C &kp V &kp B  &trans                    &kp N &kp M &kp COMMA &kp DOT &kp FSLH &trans
/* thumbs */
&trans &trans &trans
&trans &trans &trans
&trans &trans &trans
&trans &trans &trans
            >;
            label = "QWERTY";
        };

        LWR {
            bindings = <
&kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &trans               &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &trans
&mt LALT DELETE &kp EXCL &kp AT &kp HASH &kp DOLLAR &kp PERCENT   &kp CARET &kp AMPERSAND &kp ASTRK &kp LPAR &kp RPAR &trans
&trans &trans &trans &gc &ga &trans                               &tap &tp &taw &tw &trans &trans
/* thumbs */
&trans &trans &trans
&trans &trans &trans
&trans &trans &kp LBKT &kp RBKT
&trans &trans &trans
            >;
            label = "LWR";
        };

        RSE {
            bindings = <
&trans &kp F1 &kp F2 &kp F3 &kp F4 &trans  &trans                 &kp HOME &kp PGDN &kp PGUP &kp END &trans &trans
&trans &kp F5 &kp F6 &kp F7 &kp F8 &trans  &trans                 &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
&trans &kp F9 &kp F10 &kp F11 &kp F12 &trans &trans               &kp PLUS &kp MINUS &kp EQUAL &arrow &trans &trans
/* thumbs */
&trans &kp SPACE &trans
&trans &trans &trans
&trans &trans &trans
&trans &trans &trans
            >;
            label = "RSE";
        };

        LFT {
            bindings = <
&trans &trans &kp N7 &kp N8 &kp N9 &kp MINUS &trans               &trans &trans &trans &trans &trans &trans
&trans &trans &kp N4 &kp N5 &kp N6 &kp PLUS  &trans               &kp EQUAL &trans &trans &trans &trans &trans
&trans &trans &kp N1 &kp N2 &kp N3 &kp N0    &trans               &trans &trans &trans &trans &trans &trans
/* thumbs */
&trans &trans &trans
&trans &trans &trans
&trans &trans &kp PLUS &kp MINUS
&trans &trans &trans
            >;
            label = "LFT";
        };

        RGT {
            bindings = <
&trans &trans &trans &trans &trans &trans &trans                  &kp MINUS &kp N7 &kp N8 &kp N9 &trans &trans
&trans &trans &trans &trans &trans &trans &trans                  &kp LS(PLUS) &kp N4 &kp N5 &kp N6 &trans &trans
&trans &trans &trans &trans &trans &trans &trans                  &kp N0 &kp N1 &kp N2 &kp N3 &trans &trans
/* thumbs */
&trans &trans &trans
&kp EQUAL &trans &trans
&kp MINUS &kp PLUS &trans
&trans &trans &trans
            >;
            label = "RGT";
        };

        ADJ {
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans      &out OUT_TOG &trans &trans &trans &trans &trans
&trans &bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2 &bt BT_DISC 3 &bt BT_DISC 4 &trans     &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans                &to 1 &to 0 &trans &trans &trans &trans
/* thumbs */
&trans &trans &trans
&trans &trans &trans
&trans &trans &trans
&trans &trans &trans
            >;
            label = "ADJ";
        };
    };
};
