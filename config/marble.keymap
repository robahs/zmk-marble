#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define CMAK   0
#define LWR   1
#define RSE   2
#define LFT 3
#define RGT 4
#define QWERTY 5
#define ADJ   6

#define HPR(key) LS(LC(LA(LGUI)))
#define MEH(key)   LS(LC(LALT))

&sl { release-after-ms = <5000>; };

&lt { flavor = "hold-preferred"; };

&default_kscan {
    debounce-press-ms = <30>;
    debounce-release-ms = <30>;
};

/ {
    behaviors {
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <140>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <100>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 1>;
            then-layer = <4>;
        };
    };

    macros {
        arrow: arrow {
            compatible = "zmk,behavior-macro";
            label = "ARROW";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
        };

        gc: gc {
            compatible = "zmk,behavior-macro";
            label = "GC";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp C &kp O &kp M &kp M &kp I &kp T &kp SPACE &kp MINUS &kp M &kp SPACE &kp DQT &kp DQT &kp LEFT_ARROW>;
        };

        ga: ga {
            compatible = "zmk,behavior-macro";
            label = "GA";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp A &kp D &kp D &kp SPACE &kp MINUS &kp LS(A)>;
        };

        select: select {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp S &kp E &kp L &kp E &kp C &kp T &kp SPACE &kp STAR &kp SPACE &kp F &kp R &kp O &kp M &kp SPACE>;
            label = "SELECT";
        };

        todo: todo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp FSLH &kp FSLH &kp SPACE &kp LS(T) &kp LS(O) &kp LS(D) &kp LS(O) &kp COLON &kp SPACE>;
            label = "TODO";
        };

        console_log: console_log {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HOME &kp C &kp O &kp N &kp S &kp O &kp L &kp E &kp DOT &kp L &kp O &kp G &kp LPAR &kp END &kp RPAR &kp SEMI>;
            label = "CONSOLE_LOG";
        };

        import: import {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp I &kp M &kp P &kp O &kp R &kp T &kp SPACE &kp LBRC &kp SPACE &kp RBRC &kp SPACE &kp F &kp R &kp O &kp M &kp SPACE &kp SQT &kp SQT &kp SEMI &kp LEFT &kp LEFT_ARROW>;
            label = "IMPORT";
        };

        typecheck: typecheck {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp P &kp N &kp P &kp M &kp SPACE &kp T &kp Y &kp P &kp E &kp C &kp H &kp E &kp C &kp K>;
            label = "TYPECHECK";
        };

        lint: lint {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp P &kp N &kp P &kp M &kp SPACE &kp L &kp I &kp N &kp T &kp SPACE &kp MINUS &kp MINUS &kp SPACE &kp MINUS &kp MINUS &kp F &kp I &kp X>;
            label = "LINT";
        };

        test: test {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp P &kp N &kp P &kp M &kp SPACE &kp T &kp E &kp S &kp T>;
            label = "TEST";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        CMAK {
            bindings = <
&kp TAB        &kp Q  &kp W             &kp F              &kp P         &kp B          &kp ESC         &kp RA(Q)        &kp J       &kp L  &kp U           &kp Y            &kp SEMI  &kp BSLH
&kp BACKSPACE  &kp A  &kp R             &kp S              &kp T         &kp G          &kp RA(P)       &kp RA(W)        &kp M       &kp N  &kp E           &kp I            &kp O     &kp SQT
&kp LCTRL      &kp Z  &kp X             &kp C              &kp D         &kp V                                           &kp K       &kp H  &kp COMMA       &kp DOT          &kp FSLH  &kp RIGHT_GUI
                      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &mo 1         &kp SPACE      &kp LEFT_SHIFT  &kp RIGHT_SHIFT  &kp RETURN  &mo 2  &kp LEFT_BRACE  &kp RIGHT_BRACE
                                                           &kp LEFT_ALT  &kp BACKSPACE                                   &kp DELETE  &mo 3
            >;

            label = "CMAK";
        };

        LWR {
            bindings = <
&kp GRAVE  &kp N1    &kp N2       &kp N3    &kp N4      &kp N5       &trans  &trans  &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &trans
&trans     &kp EXCL  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT  &trans  &trans  &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans     &trans    &trans       &trans    &trans      &trans                       &trans     &trans         &trans        &trans                &trans                 &trans
                     &trans       &trans    &trans      &trans       &trans  &trans  &trans     &trans         &trans        &trans
                                            &trans      &trans                       &trans     &trans
            >;

            label = "LWR";
        };

        RSE {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5   &trans  &trans  &kp HOME     &kp PG_DN  &kp PG_UP  &kp END    &trans  &trans
&trans  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &trans  &trans  &kp LEFT     &kp DOWN   &kp UP     &kp RIGHT  &trans  &trans
&trans  &kp F11  &kp F12  &trans  &trans  &trans                   &kp KP_PLUS  &kp MINUS  &kp EQUAL  &arrow     &trans  &trans
                 &trans   &trans  &trans  &trans   &trans  &trans  &trans       &trans     &trans     &trans
                                  &trans  &trans                   &trans       &trans
            >;

            label = "RSE";
        };

        makro {
            bindings = <
&trans  &trans  &trans  &lint    &todo       &trans  &trans  &trans  &trans  &console_log  &trans  &trans   &trans  &trans
&trans  &ga     &trans  &select  &typecheck  &trans  &trans  &trans  &trans  &trans        &trans  &import  &trans  &trans
&trans  &trans  &trans  &gc      &trans      &trans                  &test   &trans        &trans  &trans   &trans  &trans
                &trans  &trans   &trans      &trans  &trans  &trans  &trans  &trans        &trans  &trans
                                 &trans      &trans                  &trans  &trans
            >;

            label = "makro";
        };

        ADJ {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &sys_reset  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                            &trans  &trans  &trans  &trans  &trans  &trans
                          &trans        &trans        &trans        &trans        &trans      &trans  &trans  &trans  &trans  &trans
                                                      &trans        &trans                            &trans  &trans
            >;

            label = "ADJ";
        };
    };
};
